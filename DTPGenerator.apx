<?xml version="1.0" encoding="ISO-8859-1"?>
<AmiBroker-Analysis CompactMode="0">
<General>
<FormatVersion>1</FormatVersion>
<Symbol>NU</Symbol>
<FormulaPath>C:\\Users\\admin\\OneDrive\\Michael\\Documents\\GitHub\\TPT\\DTP Generator NextGen.afl</FormulaPath>
<FormulaContent>// Generate Daily Trading Plan\r\n// Next Gen implies a version that does not rely on a SetForeign loop as this is bad code\r\n// Amibroker 6.40.4, developed and debugged in a i9-12900-based Windows 11 laptop\r\n\r\n// Mod-sum\r\n/*\r\n  2023-06-27: MAM Initial Creation\r\n*/\r\n\r\n// include the functional library\r\n#include &lt;TPT_Func_Lib.afl&gt;\r\n\r\n// Instead of pulling from the favourites, this formula will be executed in an Exploration Analysis, with the Favourties watchlist as a filter\r\n\r\n// Make sure the exploration is set to explore the last bar of the Favourites watchlist, ONLY!\r\n\r\npicsonly = False;\r\n\r\n// Generate imagery ///////////////////////////////////////////////////////////\r\n\r\nif( Status( "stocknum" ) == 0 )   // set to write if first ticker\r\n{\r\n    exportPath = "C:\\\\Users\\\\admin\\\\OneDrive\\\\Michael\\\\Documents\\\\Investing\\\\DMT Discord Server\\\\DTP Images\\\\";\r\n    //fmkdir( exportPath ); // Create the path if it does not exists\r\n\r\n    pxHeight = Status( "pxheight" );\r\n    pxWidth = Status( "pxwidth" );\r\n\r\n    AB = CreateObject( "Broker.Application" );\r\n    // commented out since sometimes seems to get no "active" Doc/Window\r\n    // and will generate empty images (I'm not able to reproduce the issue systematically)\r\n    // AD = AB.ActiveDocument;\r\n    // AW = AD.ActiveWindow;\r\n\r\n    ABDocs = AB.Documents;\r\n\r\n// _TRACE("AB Documents Count = " + ABDocs.Count);\r\n    if( ABDocs.Count &gt; 0 )\r\n    {\r\n        // AD = AB.ActiveDocument;\r\n        AD = ABDocs.Item( 0 ); // Use the first chart only - set your default layout accordingly\r\n        ADWindows = AD.Windows;\r\n\r\n        // _TRACE("AD Windows Count = " + ADWindows.Count);\r\n        if( ADWindows.Count &gt; 0 )\r\n        {\r\n            AW = ADWindows.Item( 0 );\r\n            AW.Activate;\r\n            // would be nice to be able to detect "blank charts"\r\n\r\n            //Wlist = CategoryFind( "XYZ", categoryWatchlist );\r\n            symlist = CategoryGetSymbols( categoryFavorite, 0 );\r\n\r\n            for( i = 0; ( sym = StrExtract( symlist, i ) ) != ""; i++ )\r\n            {\r\n\r\n                AD.Name = sym;\r\n\r\n                datestr = Now( 1 );\r\n                datestr = StrReplace( datestr, "/", "-" );\r\n\r\n                AW.SelectedTab = 0;\r\n                filename = sym + "_DTP_" + datestr + ".PNG";\r\n                AW.ExportImage( exportPath + filename );\r\n\r\n                //AW.SelectedTab = 1;\r\n                //filename = sym + "_ReturnChart.PNG";\r\n                //AW.ExportImage( exportPath + filename );\r\n\r\n                //AW.SelectedTab = 2;\r\n                //filename = sym + "_RiskChart.PNG";\r\n                //AW.ExportImage( exportPath + filename );\r\n            }\r\n        } // no Windows. Should never happen!\r\n        else\r\n            _TRACE( "Active Document (Item 0) has no window." );\r\n    } // No open documents (charts) in current instance of AmiBroker\r\n    else\r\n        _TRACE( "No open documents..." );\r\n}\r\n\r\n// Generate CSV outputs //////////////////////////////////////////\r\n\r\nif( NOT picsonly )\r\n{\r\n\t// get ticker\r\n    ticker = Name();\r\n\r\n\t// determine base\r\n    VldPPBase\t = getPPBaseParam(    L, H,\t      "Validity" );\r\n    VldCSBase  \t = getCSBaseParam(    L, H, O, C, "Validity" );\r\n    VldCSCapBase = getCSCapBaseParam( L, H, O, C, "Validity" );\r\n\r\n\t// Determine Pullback selection active\r\n\tPBActive = StaticVarGet( Name() + "PBActive"\t);\r\n\tPBBar\t = StaticVarGet( Name() + "PBBar" \t \t);\r\n    \r\n    if ( IsNull(PBActive) )\r\n\t\tPBActive = False;\r\n\r\n\t// Assign base string name for DTP output\r\n    if( VldPPBase )\r\n        Base = "PS";\r\n    else\r\n        if( VldCSBase )\r\n            Base = "CS";\r\n        else\r\n            if( VldCSCapBase )\r\n                Base = "CAP";\r\n            else\r\n\t\t\t\tBase = "N/A";\r\n\r\n\tif ( PBActive )\r\n\t\tif ( StrMatch(Base, "N/A") )\r\n\t\t\tBase = "PB";\r\n\t\telse\r\n\t\t\tBase += " PB";\r\n\r\n\t// determine pivot contraction\r\n    PvtPrice \t= 0;\r\n    \r\n    if ( PBActive )\r\n\t\tPvtPrice = LastValue(Ref(H, -PBBar));\r\n\telse\r\n\t\tPvtPrice\t= getMSPivotParam( L, H, O, C, "Price" );\r\n\r\n\t// extract buypoint\r\n    if( IsNull( PvtPrice[1] ) )\r\n        Buypoint = PvtPrice[3] + 0.1;\t// add ten cents to pivot contraction\r\n    else\r\n        Buypoint = PvtPrice[1] + 0.1;\t// add ten cents to pause pivot\r\n\r\n\t// determine limit and stops\r\n    LimitPrice \t= BuyPoint * 1.01;\r\n    Stop2\t\t= BuyPoint * 0.98;\r\n    Stop4\t\t= BuyPoint * 0.96;\r\n\r\n\t// determine profit taking points (High risk and low risk)\r\n    PT_HR\t\t= BuyPoint * 1.06;\r\n    PT_LR\t\t= BuyPoint * 1.20;\r\n\r\n\t// determine earnings dates\r\n    ih = InternetOpenURL( "https://cloud.iexapis.com/stable/stock/" + ticker + "/stats/nextEarningsDate" + "?token=" + "pk_9e61c412f48441eb94df8eef90654c06" );\r\n\r\n\t// default assignment\r\n    ED = "NA";\r\n\r\n\t// contact IEX for the earnings date\r\n    if( ih )\r\n    {\r\n        str = InternetReadString( ih );\r\n        ED  = StrMid( str, 1, 10 );\r\n\r\n        InternetClose( ih );\r\n    }\r\n\r\n\t// discard garbage data, checking for string length detects the vast majority of errors for my purposes\r\n    if( StrLen( ED ) &lt; 3 )\r\n        ED = "NA";\r\n\r\n\t// prepare csv row\r\n    CR \t = StaticVarGetText( ticker + "_IBD_CR" );\r\n    EPS  = StaticVarGetText( ticker + "_IBD_EPS" );\r\n    RS   = StaticVarGetText( ticker + "_IBD_RS" );\r\n    IGRS = StaticVarGetText( ticker + "_IBD_IGRS" );\r\n    SMR  = StaticVarGetText( ticker + "_IBD_SMR" );\r\n    AD   = StaticVarGetText( ticker + "_IBD_AD" );\r\n    SPON = StaticVarGetText( ticker + "_IBD_SPON" );\r\n\r\n\t// create output string for the csv file\r\n    csvrow = ticker + "," + Base + "," + StrFormat( "%.2f, %.2f, %.2f, %.2f, %.2f, %.2f,", LimitPrice, BuyPoint, Stop2, Stop4, PT_HR, PT_LR ) + ED + "," + CR + "," + EPS + "," + RS + "," + IGRS + "," + SMR + "," + AD + "," + SPON + "\\n";\r\n\r\n\t// Now we need to check if this is the first stock in the Favourites list. If so we can overwrite the DTP.csv file. If not, we append!\r\n    Favourites = CategoryGetSymbols( categoryFavorite, 0 );\r\n    FavTicker = StrExtract( Favourites, 0 );\r\n\r\n\t// open the DTP.csv file\r\n    if( Status( "stocknum" ) == 0 )   // set to write if first ticker\r\n        fh = fopen( "C:\\\\Users\\\\admin\\\\OneDrive\\\\Michael\\\\Documents\\\\Investing\\\\DMT Discord Server\\\\CSV Data\\\\DTP.csv", "w" );\r\n    else\r\n        // set to append if not the first ticker\r\n        fh = fopen( "C:\\\\Users\\\\admin\\\\OneDrive\\\\Michael\\\\Documents\\\\Investing\\\\DMT Discord Server\\\\CSV Data\\\\DTP.csv", "a" );\r\n\r\n\t// write to the file if successfully opened, ie fh &gt; 0\r\n    if( fh )\r\n        fputs( csvrow, fh );\r\n\r\n\t// close file\r\n    fclose( fh );\r\n\r\n\t// get the date for the DTP being generated\r\n    datetoday \t= LastValue( DateTime() );\t// grab the last date where EOD data is available\r\n    DoW \t\t= LastValue( DayOfWeek() );\t// get the day of the week array for the EOD data\r\n\r\n\t// determine the DTP date\r\n    if( DoW &lt; 5 )\r\n        // If the last data is latest Thursday (DoW &lt; =4), you can simply give the day after\r\n        // Note Sunday will never occur\r\n        DTPDateDT = DateTimeAdd( datetoday, 1 );\r\n    else // If Friday data exists (DoW &gt;= 5, will never be 6), then set to the Monday after\r\n        DTPDateDT = DateTimeAdd( datetoday, 3 );\r\n\r\n\t// convert the DTP date to a string\r\n    DTPDateStr = DateTimeToStr( DTPDateDT );\r\n\r\n\t// update the CSV output to pre-pend the date\r\n    csvrow = DTPDateStr + "," + csvrow;\r\n\r\n\t// open the RGS_Source File and always append!\r\n    fi = fopen( "C:\\\\Users\\\\admin\\\\OneDrive\\\\Michael\\\\Documents\\\\Investing\\\\DMT Discord Server\\\\CSV Data\\\\RGS_Source.csv", "a" );\r\n\r\n\t// write to the file if successfully opened, ie fi &gt; 0\r\n    if( fi )\r\n        fputs( csvrow, fi );\r\n\r\n\t// close file\r\n    fclose( fi );\r\n\r\n\t// set filter to true to see if file acces was successful, which should imply success\r\n\t// This way if the favourites list is larger than the exploration output, we know there was an issue\r\n    if( fh AND fi ) Filter = True;\r\n}\r\n</FormulaContent>
<ApplyTo>2</ApplyTo>
<RangeType>1</RangeType>
<RangeAmount>1</RangeAmount>
<FromDate>2017-01-01 00:00:00</FromDate>
<ToDate>2017-12-31</ToDate>
<SyncOnSelect>0</SyncOnSelect>
<RunEvery>0</RunEvery>
<RunEveryInterval>5min</RunEveryInterval>
<IncludeFilter>
<ExcludeMode>0</ExcludeMode>
<OrSelection>1</OrSelection>
<Favourite>1</Favourite>
<Index>0</Index>
<Type0>0</Type0>
<Category0>0</Category0>
<Type1>0</Type1>
<Category1>0</Category1>
<Type2>0</Type2>
<Category2>0</Category2>
<Type3>0</Type3>
<Category3>0</Category3>
<Type4>0</Type4>
<Category4>0</Category4>
<Type5>0</Type5>
<Category5>0</Category5>
<Type6>0</Type6>
<Category6>0</Category6>
</IncludeFilter>
<ExcludeFilter>
<ExcludeMode>1</ExcludeMode>
<OrSelection>0</OrSelection>
<Favourite>0</Favourite>
<Index>0</Index>
<Type0>0</Type0>
<Category0>-1</Category0>
<Type1>1</Type1>
<Category1>-1</Category1>
<Type2>2</Type2>
<Category2>-1</Category2>
<Type3>3</Type3>
<Category3>-1</Category3>
<Type4>4</Type4>
<Category4>-1</Category4>
<Type5>5</Type5>
<Category5>-1</Category5>
<Type6>6</Type6>
<Category6>-1</Category6>
</ExcludeFilter>
</General>
<BacktestSettings>
<InitialEquity>10000</InitialEquity>
<TradeFlags>1</TradeFlags>
<MaxLossStopMode>0</MaxLossStopMode>
<MaxLossStopValue>0</MaxLossStopValue>
<MaxLossStopAtStop>0</MaxLossStopAtStop>
<ProfitStopMode>0</ProfitStopMode>
<ProfitStopValue>0</ProfitStopValue>
<ProfitStopAtStop>0</ProfitStopAtStop>
<TrailingStopMode>0</TrailingStopMode>
<TrailingStopPeriods>0</TrailingStopPeriods>
<TrailingStopValue>30</TrailingStopValue>
<TrailingStopAtStop>0</TrailingStopAtStop>
<CommissionMode>0</CommissionMode>
<CommissionValue>0</CommissionValue>
<BuyPriceField>1</BuyPriceField>
<BuyDelay>1</BuyDelay>
<SellPriceField>1</SellPriceField>
<SellDelay>1</SellDelay>
<ShortPriceField>0</ShortPriceField>
<ShortDelay>0</ShortDelay>
<CoverPriceField>0</CoverPriceField>
<CoverDelay>0</CoverDelay>
<ReportSystemFormula>0</ReportSystemFormula>
<ReportSystemSettings>0</ReportSystemSettings>
<ReportOverallSummary>1</ReportOverallSummary>
<ReportSummary>1</ReportSummary>
<ReportTradeList>1</ReportTradeList>
<LoadRemainingQuotes>1</LoadRemainingQuotes>
<Periodicity>0</Periodicity>
<InterestRate>0</InterestRate>
<ReportOutPositions>1</ReportOutPositions>
<UseConstantPriceArrays>0</UseConstantPriceArrays>
<PointsOnlyTest>0</PointsOnlyTest>
<AllowShrinkingPosition>0</AllowShrinkingPosition>
<RangeType>1</RangeType>
<RangeLength>0</RangeLength>
<RangeFromDate>2017-01-01 00:00:00</RangeFromDate>
<RangeToDate>2017-12-31</RangeToDate>
<ApplyTo>2</ApplyTo>
<FilterQty>2</FilterQty>
<IncludeFilter>
<ExcludeMode>0</ExcludeMode>
<OrSelection>1</OrSelection>
<Favourite>1</Favourite>
<Index>0</Index>
<Type0>0</Type0>
<Category0>0</Category0>
<Type1>0</Type1>
<Category1>0</Category1>
<Type2>0</Type2>
<Category2>0</Category2>
<Type3>0</Type3>
<Category3>0</Category3>
<Type4>0</Type4>
<Category4>0</Category4>
<Type5>0</Type5>
<Category5>0</Category5>
<Type6>0</Type6>
<Category6>0</Category6>
</IncludeFilter>
<ExcludeFilter>
<ExcludeMode>1</ExcludeMode>
<OrSelection>0</OrSelection>
<Favourite>0</Favourite>
<Index>0</Index>
<Type0>0</Type0>
<Category0>-1</Category0>
<Type1>1</Type1>
<Category1>-1</Category1>
<Type2>2</Type2>
<Category2>-1</Category2>
<Type3>3</Type3>
<Category3>-1</Category3>
<Type4>4</Type4>
<Category4>-1</Category4>
<Type5>5</Type5>
<Category5>-1</Category5>
<Type6>6</Type6>
<Category6>-1</Category6>
</ExcludeFilter>
<UseOptimizedEvaluation>0</UseOptimizedEvaluation>
<BacktestRangeType>3</BacktestRangeType>
<BacktestRangeLength>0</BacktestRangeLength>
<BacktestRangeFromDate>1986-01-01 00:00:00</BacktestRangeFromDate>
<BacktestRangeToDate>2017-06-07</BacktestRangeToDate>
<MarginRequirement>100</MarginRequirement>
<SameDayStops>0</SameDayStops>
<RoundLotSize>1</RoundLotSize>
<TickSize>0</TickSize>
<DrawdownPriceField>0</DrawdownPriceField>
<ReverseSignalForcesExit>0</ReverseSignalForcesExit>
<NoDefaultColumns>0</NoDefaultColumns>
<AllowSameBarExit>0</AllowSameBarExit>
<ExtensiveOptimizationWarning>1</ExtensiveOptimizationWarning>
<WaitForBackfill>0</WaitForBackfill>
<MaxRanked>4</MaxRanked>
<MaxTraded>100</MaxTraded>
<MaxTracked>100</MaxTracked>
<PortfolioReportMode>0</PortfolioReportMode>
<MinShares>1</MinShares>
<SharpeRiskFreeReturn>5</SharpeRiskFreeReturn>
<PortfolioMode>0</PortfolioMode>
<PriceBoundCheck>1</PriceBoundCheck>
<AlignToReferenceSymbol>0</AlignToReferenceSymbol>
<ReferenceSymbol>^DJI</ReferenceSymbol>
<UPIRiskFreeReturn>5.4</UPIRiskFreeReturn>
<NBarStopMode>0</NBarStopMode>
<NBarStopValue>0</NBarStopValue>
<NBarStopReentryDelay>0</NBarStopReentryDelay>
<MaxLossStopReentryDelay>0</MaxLossStopReentryDelay>
<ProfitStopReentryDelay>0</ProfitStopReentryDelay>
<TrailingStopReentryDelay>0</TrailingStopReentryDelay>
<AddFutureBars>0</AddFutureBars>
<DistChartSpacing>5</DistChartSpacing>
<ProfitDistribution>1</ProfitDistribution>
<MAFEDistribution>1</MAFEDistribution>
<IndividualDetailedReports>0</IndividualDetailedReports>
<PortfolioReportTradeList>1</PortfolioReportTradeList>
<LimitTradeSizeAsPctVol>0</LimitTradeSizeAsPctVol>
<DisableSizeLimitWhenVolumeIsZero>0</DisableSizeLimitWhenVolumeIsZero>
<UsePrevBarEquityForPosSizing>1</UsePrevBarEquityForPosSizing>
<NBarStopHasPriority>0</NBarStopHasPriority>
<UseCustomBacktestProc>0</UseCustomBacktestProc>
<CustomBacktestProcFormulaPath/>
<MinPosValue>100</MinPosValue>
<MaxPosValue>0</MaxPosValue>
<ChartInterval>86400</ChartInterval>
<DisableRuinStop>0</DisableRuinStop>
<OptTarget>CAR/MDD</OptTarget>
<WFMode>0</WFMode>
<GenerateReport>1</GenerateReport>
<MaxLongPos>0</MaxLongPos>
<MaxShortPos>0</MaxShortPos>
<SeparateLongShortRank>0</SeparateLongShortRank>
<TotalSymbolQty>11</TotalSymbolQty>
<EnableUserReportCharts>1</EnableUserReportCharts>
<ChartWidth>500</ChartWidth>
<ChartHeight>300</ChartHeight>
<SettlementDelay>0</SettlementDelay>
<PortfolioReportSystemFormula>1</PortfolioReportSystemFormula>
<InterestRateSymbol>0</InterestRateSymbol>
<MarginRate>5</MarginRate>
<IncludeBHStats>1</IncludeBHStats>
<BHSymbol>^DJI</BHSymbol>
<MCEnable>1</MCEnable>
<MCRuns>1000</MCRuns>
<MCPosSizeMethod>3</MCPosSizeMethod>
<MCPosSizeShares>100</MCPosSizeShares>
<MCPosSizeValue>1000</MCPosSizeValue>
<MCPosSizePctEquity>5</MCPosSizePctEquity>
<MCChartEquityCurves>1</MCChartEquityCurves>
<MCStrawBroomLines>20</MCStrawBroomLines>
<Scenario>0</Scenario>
<MCChartEquityScale>0</MCChartEquityScale>
<MCUseEquityChanges>0</MCUseEquityChanges>
<MCLogScaleFinalEquity>0</MCLogScaleFinalEquity>
<MCLogScaleDrawdown>0</MCLogScaleDrawdown>
<MCNegativeDrawdown>1</MCNegativeDrawdown>
<ISEnabled>1</ISEnabled>
<ISStartDate>2000-01-01</ISStartDate>
<ISEndDate>2004-01-01</ISEndDate>
<ISLastDate>2017-01-01</ISLastDate>
<ISStep>1</ISStep>
<ISStepUnit>3</ISStepUnit>
<ISAnchored>0</ISAnchored>
<ISLastUsesToday>1</ISLastUsesToday>
<OSEnabled>1</OSEnabled>
<OSStartDate>2004-01-01</OSStartDate>
<OSEndDate>2005-01-01</OSEndDate>
<OSLastDate>2017-01-01</OSLastDate>
<OSStep>1</OSStep>
<OSStepUnit>3</OSStepUnit>
<OSAnchored>0</OSAnchored>
<OSLastUsesToday>1</OSLastUsesToday>
</BacktestSettings>
</AmiBroker-Analysis>
