<?xml version="1.0" encoding="ISO-8859-1"?>
<AmiBroker-Analysis CompactMode="0">
<General>
<FormatVersion>1</FormatVersion>
<Symbol>APO</Symbol>
<FormulaPath>C:\\Users\\admin\\OneDrive\\Michael\\Documents\\GitHub\\TPT\\SP1500RankForm.afl</FormulaPath>
<FormulaContent>\r\nif ( Status("stocknum") == 0 )\r\n{\r\n// Default value for average days in three months of trading\r\n    QtrPrd = 16;\r\n\r\n    // Collect symbols from all markets\r\n    listnum = CategoryFind( "SP1500 Subindexes", categoryWatchlist );\r\n    list1500 = CategoryGetSymbols( categoryWatchlist, listnum );  // S&amp;P1500 rank\r\n\r\n    // Create the full list of stocks to be ranked as a concatenated string CSV of both markets\r\n    List    = list1500;\r\n    ListQty = StrCount( List, "," ) + 1;\r\n\r\n    // Clear the static vars from last run\r\n    //StaticVarRemove( "*" );\r\n\r\n    // Generate the raw RS score for every stock and store in a static var\r\n    for( n = 0; ( Symbol = StrExtract( List, n ) ) != "";  n++ )\r\n    {\r\n        // Set price arrays to current symbol in the loop\r\n        SetForeign( Symbol );\r\n\r\n        // Calculate Raw RS\r\n        if( BarCount &gt; QtrPrd * 4 )\r\n        {\r\n            x1 = ROC( C, QtrPrd * 1 );\r\n            x2 = ROC( C, QtrPrd * 2 );\r\n            x3 = ROC( C, QtrPrd * 3 );\r\n            x4 = ROC( C, QtrPrd * 4 );\r\n\r\n            // Aggregate raw score\r\n            RSRaw = 2 * x1 + x2 + x3 + x4;\r\n\r\n            // set to static var\r\n            StaticVarSet( "SP1500_" + Symbol, RSRaw );\r\n        }\r\n        else\r\n            if( BarCount &gt; QtrPrd * 3 )\r\n            {\r\n                x1 = ROC( C, QtrPrd * 1 );\r\n                x2 = ROC( C, QtrPrd * 2 );\r\n                x3 = ROC( C, QtrPrd * 3 );\r\n                x4 = ROC( C, BarCount - 1 );\r\n\r\n                // Aggregate raw score\r\n                RSRaw = 2 * x1 + x2 + x3 + x4;\r\n\r\n                // set to static var\r\n                StaticVarSet( "SP1500_" + Symbol, RSRaw );\r\n            }\r\n            else\r\n                if( BarCount &gt; QtrPrd * 2 )\r\n                {\r\n                    x1 = ROC( C, QtrPrd * 1 );\r\n                    x2 = ROC( C, QtrPrd * 2 );\r\n                    x3 = ROC( C, BarCount - 1 );\r\n                    x4 = ROC( C, BarCount - 1 );\r\n\r\n                    // Aggregate raw score\r\n                    RSRaw = 2 * x1 + x2 + x3 + x4;\r\n\r\n                    // set to static var\r\n                    StaticVarSet( "SP1500_" + Symbol, RSRaw );\r\n                }\r\n                else\r\n                    if( BarCount &gt; QtrPrd )\r\n                    {\r\n                        x1 = ROC( C, QtrPrd * 1 );\r\n                        x2 = ROC( C, BarCount - 1 );\r\n                        x3 = ROC( C, BarCount - 1 );\r\n                        x4 = ROC( C, BarCount - 1 );\r\n\r\n                        // Aggregate raw score\r\n                        RSRaw = 2 * x1 + x2 + x3 + x4;\r\n\r\n                        // set to static var\r\n                        StaticVarSet( "SP1500_" + Symbol, RSRaw );\r\n                    }\r\n                    else\r\n                        if( BarCount &gt; 3 )\t\t// Amibroker complains it needs 3 bars for charts\r\n                        {\r\n                            x1 = ROC( C, BarCount - 1 );\r\n                            x2 = ROC( C, BarCount - 1 );\r\n                            x3 = ROC( C, BarCount - 1 );\r\n                            x4 = ROC( C, BarCount - 1 );\r\n\r\n                            // Aggregate raw score\r\n                            RSRaw = 2 * x1 + x2 + x3 + x4;\r\n\r\n                            // set to static var\r\n                            StaticVarSet( "SP1500_" + Symbol, RSRaw );\r\n                        }\r\n                        else\r\n                        {\r\n                            // Don't consider in percentile ranking\r\n                            ListQty--;\r\n\t\t\t\t\t\t}\r\n\r\n        // Reset price arrays\r\n        RestorePriceArrays();\r\n    }\r\n\r\n    StaticVarGenerateRanks( "Rank", "SP1500_", 0, 1234 );\r\n    // Generate ranking of results\r\n\r\n    // Convert the static var ranks generated into a percentile score.\r\n    for( n = 0; ( Symbol = StrExtract( List, n ) )  != "";  n++ )\r\n    {\r\n        // get the current symbol's RSRaw_ value\r\n        Rank  = StaticVarGet( "Rank" + "SP1500_" +  Symbol );\r\n\r\n        // create percentile value IBD-style\r\n        RSpctile = 100 - 100 * Rank / ListQty;\r\n        \r\n        // alternate percentile rank formula\r\n        RSpctile = floor((ListQty - Rank)/ListQty*100);\r\n\r\n        // store the IBD style ranking in new static variable named "RS_&lt;Ticker&gt;"\r\n        StaticVarSet( "RS_" + Symbol, RSpctile, True );\r\n        \r\n        // store for retrieval via GICS ID # as well\r\n        SetForeign( Symbol );\r\n        GIDD = "GicsID_" + GicsID(0);\r\n        RestorePriceArrays();\r\n        \r\n        StaticVarSet( GIDD, RSpctile, True );\r\n    }\r\n\r\n    // remove unnecessary static data\r\n    // free up old stuff\r\n    StaticVarRemove( "SP1500_*" );\r\n    StaticVarRemove( "Rank" + "SP1500_*" );\r\n}\r\n\r\nFilter = True;\r\n\r\nSymbol = Name();\r\n\r\nRS = StaticVarGet("RS_" + Symbol);\r\n\r\nGICS_ROC = ROC( C , 1 );\r\n\r\nAddTextColumn(GicsID(1), "Industry");\r\nAddColumn(RS, "3Mth RS", 1.0, colorBlack, IIf(RS &gt; 85, colorLime, colorLightOrange));\r\nAddColumn(GICS_ROC, "Daily return (%)", 1.2, colorBlack, IIf(GICS_ROC &gt; 0, colorLime, colorLightOrange));\r\nSetSortColumns(-4);\r\n</FormulaContent>
<ApplyTo>2</ApplyTo>
<RangeType>1</RangeType>
<RangeAmount>1</RangeAmount>
<FromDate>2017-01-01 00:00:00</FromDate>
<ToDate>2017-12-31</ToDate>
<SyncOnSelect>0</SyncOnSelect>
<RunEvery>0</RunEvery>
<RunEveryInterval>5min</RunEveryInterval>
<IncludeFilter>
<ExcludeMode>0</ExcludeMode>
<OrSelection>1</OrSelection>
<Favourite>0</Favourite>
<Index>0</Index>
<Type0>4</Type0>
<Category0>59</Category0>
<Type1>0</Type1>
<Category1>0</Category1>
<Type2>0</Type2>
<Category2>0</Category2>
<Type3>0</Type3>
<Category3>0</Category3>
<Type4>0</Type4>
<Category4>0</Category4>
<Type5>5</Type5>
<Category5>-1</Category5>
<Type6>6</Type6>
<Category6>-1</Category6>
</IncludeFilter>
<ExcludeFilter>
<ExcludeMode>1</ExcludeMode>
<OrSelection>0</OrSelection>
<Favourite>0</Favourite>
<Index>0</Index>
<Type0>0</Type0>
<Category0>-1</Category0>
<Type1>1</Type1>
<Category1>-1</Category1>
<Type2>2</Type2>
<Category2>-1</Category2>
<Type3>3</Type3>
<Category3>-1</Category3>
<Type4>4</Type4>
<Category4>-1</Category4>
<Type5>5</Type5>
<Category5>-1</Category5>
<Type6>6</Type6>
<Category6>-1</Category6>
</ExcludeFilter>
</General>
<BacktestSettings>
<InitialEquity>10000</InitialEquity>
<TradeFlags>1</TradeFlags>
<MaxLossStopMode>0</MaxLossStopMode>
<MaxLossStopValue>0</MaxLossStopValue>
<MaxLossStopAtStop>0</MaxLossStopAtStop>
<ProfitStopMode>0</ProfitStopMode>
<ProfitStopValue>0</ProfitStopValue>
<ProfitStopAtStop>0</ProfitStopAtStop>
<TrailingStopMode>0</TrailingStopMode>
<TrailingStopPeriods>0</TrailingStopPeriods>
<TrailingStopValue>30</TrailingStopValue>
<TrailingStopAtStop>0</TrailingStopAtStop>
<CommissionMode>0</CommissionMode>
<CommissionValue>0</CommissionValue>
<BuyPriceField>1</BuyPriceField>
<BuyDelay>1</BuyDelay>
<SellPriceField>1</SellPriceField>
<SellDelay>1</SellDelay>
<ShortPriceField>0</ShortPriceField>
<ShortDelay>0</ShortDelay>
<CoverPriceField>0</CoverPriceField>
<CoverDelay>0</CoverDelay>
<ReportSystemFormula>0</ReportSystemFormula>
<ReportSystemSettings>0</ReportSystemSettings>
<ReportOverallSummary>1</ReportOverallSummary>
<ReportSummary>1</ReportSummary>
<ReportTradeList>1</ReportTradeList>
<LoadRemainingQuotes>1</LoadRemainingQuotes>
<Periodicity>0</Periodicity>
<InterestRate>0</InterestRate>
<ReportOutPositions>1</ReportOutPositions>
<UseConstantPriceArrays>0</UseConstantPriceArrays>
<PointsOnlyTest>0</PointsOnlyTest>
<AllowShrinkingPosition>0</AllowShrinkingPosition>
<RangeType>1</RangeType>
<RangeLength>0</RangeLength>
<RangeFromDate>2017-01-01 00:00:00</RangeFromDate>
<RangeToDate>2017-12-31</RangeToDate>
<ApplyTo>2</ApplyTo>
<FilterQty>2</FilterQty>
<IncludeFilter>
<ExcludeMode>0</ExcludeMode>
<OrSelection>1</OrSelection>
<Favourite>0</Favourite>
<Index>0</Index>
<Type0>4</Type0>
<Category0>58</Category0>
<Type1>0</Type1>
<Category1>0</Category1>
<Type2>0</Type2>
<Category2>0</Category2>
<Type3>0</Type3>
<Category3>0</Category3>
<Type4>0</Type4>
<Category4>0</Category4>
<Type5>5</Type5>
<Category5>-1</Category5>
<Type6>6</Type6>
<Category6>-1</Category6>
</IncludeFilter>
<ExcludeFilter>
<ExcludeMode>1</ExcludeMode>
<OrSelection>0</OrSelection>
<Favourite>0</Favourite>
<Index>0</Index>
<Type0>0</Type0>
<Category0>-1</Category0>
<Type1>1</Type1>
<Category1>-1</Category1>
<Type2>2</Type2>
<Category2>-1</Category2>
<Type3>3</Type3>
<Category3>-1</Category3>
<Type4>4</Type4>
<Category4>-1</Category4>
<Type5>5</Type5>
<Category5>-1</Category5>
<Type6>6</Type6>
<Category6>-1</Category6>
</ExcludeFilter>
<UseOptimizedEvaluation>0</UseOptimizedEvaluation>
<BacktestRangeType>3</BacktestRangeType>
<BacktestRangeLength>0</BacktestRangeLength>
<BacktestRangeFromDate>1986-01-01 00:00:00</BacktestRangeFromDate>
<BacktestRangeToDate>2017-06-07</BacktestRangeToDate>
<MarginRequirement>100</MarginRequirement>
<SameDayStops>0</SameDayStops>
<RoundLotSize>1</RoundLotSize>
<TickSize>0</TickSize>
<DrawdownPriceField>0</DrawdownPriceField>
<ReverseSignalForcesExit>0</ReverseSignalForcesExit>
<NoDefaultColumns>0</NoDefaultColumns>
<AllowSameBarExit>0</AllowSameBarExit>
<ExtensiveOptimizationWarning>1</ExtensiveOptimizationWarning>
<WaitForBackfill>0</WaitForBackfill>
<MaxRanked>4</MaxRanked>
<MaxTraded>100</MaxTraded>
<MaxTracked>100</MaxTracked>
<PortfolioReportMode>0</PortfolioReportMode>
<MinShares>1</MinShares>
<SharpeRiskFreeReturn>5</SharpeRiskFreeReturn>
<PortfolioMode>0</PortfolioMode>
<PriceBoundCheck>1</PriceBoundCheck>
<AlignToReferenceSymbol>1</AlignToReferenceSymbol>
<ReferenceSymbol>^DJI</ReferenceSymbol>
<UPIRiskFreeReturn>5.4</UPIRiskFreeReturn>
<NBarStopMode>0</NBarStopMode>
<NBarStopValue>0</NBarStopValue>
<NBarStopReentryDelay>0</NBarStopReentryDelay>
<MaxLossStopReentryDelay>0</MaxLossStopReentryDelay>
<ProfitStopReentryDelay>0</ProfitStopReentryDelay>
<TrailingStopReentryDelay>0</TrailingStopReentryDelay>
<AddFutureBars>0</AddFutureBars>
<DistChartSpacing>5</DistChartSpacing>
<ProfitDistribution>1</ProfitDistribution>
<MAFEDistribution>1</MAFEDistribution>
<IndividualDetailedReports>0</IndividualDetailedReports>
<PortfolioReportTradeList>1</PortfolioReportTradeList>
<LimitTradeSizeAsPctVol>0</LimitTradeSizeAsPctVol>
<DisableSizeLimitWhenVolumeIsZero>0</DisableSizeLimitWhenVolumeIsZero>
<UsePrevBarEquityForPosSizing>1</UsePrevBarEquityForPosSizing>
<NBarStopHasPriority>0</NBarStopHasPriority>
<UseCustomBacktestProc>0</UseCustomBacktestProc>
<CustomBacktestProcFormulaPath/>
<MinPosValue>100</MinPosValue>
<MaxPosValue>0</MaxPosValue>
<ChartInterval>86400</ChartInterval>
<DisableRuinStop>0</DisableRuinStop>
<OptTarget>CAR/MDD</OptTarget>
<WFMode>0</WFMode>
<GenerateReport>1</GenerateReport>
<MaxLongPos>0</MaxLongPos>
<MaxShortPos>0</MaxShortPos>
<SeparateLongShortRank>0</SeparateLongShortRank>
<TotalSymbolQty>21</TotalSymbolQty>
<EnableUserReportCharts>1</EnableUserReportCharts>
<ChartWidth>500</ChartWidth>
<ChartHeight>300</ChartHeight>
<SettlementDelay>0</SettlementDelay>
<PortfolioReportSystemFormula>1</PortfolioReportSystemFormula>
<InterestRateSymbol>0</InterestRateSymbol>
<MarginRate>5</MarginRate>
<IncludeBHStats>1</IncludeBHStats>
<BHSymbol>^DJI</BHSymbol>
<MCEnable>1</MCEnable>
<MCRuns>1000</MCRuns>
<MCPosSizeMethod>3</MCPosSizeMethod>
<MCPosSizeShares>100</MCPosSizeShares>
<MCPosSizeValue>1000</MCPosSizeValue>
<MCPosSizePctEquity>5</MCPosSizePctEquity>
<MCChartEquityCurves>1</MCChartEquityCurves>
<MCStrawBroomLines>20</MCStrawBroomLines>
<Scenario>0</Scenario>
<MCChartEquityScale>0</MCChartEquityScale>
<MCUseEquityChanges>0</MCUseEquityChanges>
<MCLogScaleFinalEquity>0</MCLogScaleFinalEquity>
<MCLogScaleDrawdown>0</MCLogScaleDrawdown>
<MCNegativeDrawdown>1</MCNegativeDrawdown>
<ISEnabled>1</ISEnabled>
<ISStartDate>2000-01-01</ISStartDate>
<ISEndDate>2004-01-01</ISEndDate>
<ISLastDate>2017-01-01</ISLastDate>
<ISStep>1</ISStep>
<ISStepUnit>3</ISStepUnit>
<ISAnchored>0</ISAnchored>
<ISLastUsesToday>1</ISLastUsesToday>
<OSEnabled>1</OSEnabled>
<OSStartDate>2004-01-01</OSStartDate>
<OSEndDate>2005-01-01</OSEndDate>
<OSLastDate>2017-01-01</OSLastDate>
<OSStep>1</OSStep>
<OSStepUnit>3</OSStepUnit>
<OSAnchored>0</OSAnchored>
<OSLastUsesToday>1</OSLastUsesToday>
</BacktestSettings>
</AmiBroker-Analysis>
